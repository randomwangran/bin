#!/usr/bin/perl
## Name:  generating bash script
## Input: fileName
## Output: perl script with fileName
## best usage: open emacs with dired mode
##             mark folders you want to tar
##             boommmms
## emacs so cool!
## Useful info: "Tar return = 0" is not output
##               you know the tar command failed.
## Comment: Only use this when archive file otherwise
##          it's way tooooooooooooooooooooooo slow.
##          For regular tar, check Info manual under
##                     ____tar____ section
# use strict;
# use warnings;

$fileNameTesting = @ARGV[0];

    $file = "tar_$fileNameTesting.sh";
    print "file: $file\n";

    open $fh,'>', $file or die "Can't open the output file: $!";
    print $fh "#!/bin/bash \n";
    print $fh "#SBATCH --account=def-dting \n";
    print $fh "#SBATCH --ntasks=24 \n";
    print $fh "#SBATCH --mem-per-cpu=10G \n";
    print $fh "#SBATCH --time=00-10:00 \n";
    print $fh "lfs setstripe -c -1 $fileNameTesting.tar.gz; \n";
    print $fh "tar cf - $fileNameTesting | pigz -9 -p 24 > $fileNameTesting.tar.gz ; \n";
    print $fh q{echo "Tar return = ${PIPESTATUS[0]}"};
    close $fh;
